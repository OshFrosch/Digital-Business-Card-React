body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

.full-back {
  /* FIX: Background expand to full screen if its bigger than content */
  display: flex;
  justify-content: center;
  background-color: #434749;
}

.business-card {
  width: 500px;
  margin: 50px;
}

.business-card > div {
  min-width: 250px;
}

.profile-picture {
  background: linear-gradient(0deg, rgba(0, 0, 0, 0), rgba(101, 104, 114, 0)),
    url(./images/profile_picture.jpeg);
  background-size: cover;
  background-position: center;
  border-radius: 15px 15px 0px 0px;
  aspect-ratio: 1/1;
}

.profile-back {
  background: #222c38;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-content: center;
}

.profile-name {
  color: azure;
  text-align: center;
  font-size: 10vw;
  margin-top: 15px;
  margin-bottom: 0;
  /* understand rem/em/etc. or use @media
  What exactly is the viewport*/
}

.profile-title {
  color: #3581d8;
  text-align: center;
  font-size: 4vw;
  margin-top: 5px;
}

.action-buttons {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  /* Here I use % margins and aspect-ratio
  to keep the buttons sizing consistent*/
  margin: 1% 4% 0 4%;
  aspect-ratio: 7/1;
}

.btn {
  width: 100%;
  flex-grow: 1;
  margin: 0px 10px 0px 10px;
}

/* Button Design */
/* 
- button click effect
- button hover animation
- modular with colors
*/

.linkedin {
  position: relative; /* This is that the ::before can reference the button with absolute*/
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;

  border-width: 5px;
  border-radius: 10px;
  border-color: #5093e2;
  border-style: solid;
  background-color: transparent;
  cursor: pointer;
  padding: 1% 1% 1% 1%;

  color: #ffffff;
  transition: color 200ms; /* If we hover we want to change the color via an animation*/
  font-family: Arial;
  font-size: 20px;
  font-weight: bold;

  z-index: 1; /*This is for the text to lay over the ::before element*/
}

.linkedin::before {
  /* The idea is to have an element to sit on top of the button
   and change when the botton is hovered. This is possible since
  ::before elements are directly tied to the object*/
  content: "";
  background-color: #5093e2;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: -1;
  /*For the Annimation Part*/
  transform: scaleY(1);
  transform-origin: top;
  transition: transform 300ms;
}

.linkedin:hover::before {
  /*What happens to the before element when the button is hovered,
  since the ::before element is not an object itself.*/
  transform: scaleY(0);
}

.linkedin:hover {
  color: #5093e2;
}

.linkedin:active {
  background-color: #153d6b;
}

/*******************/

.profile-description {
  margin: 10px 20px 10px 20px;
}

.profile-description > * {
  color: #adc8e6;
}

.profile-links {
  background: #222c38;
  height: 100px;
  border-radius: 0px 0px 15px 15px;
}
